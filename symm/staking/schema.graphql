type Deposit @entity {
	id: ID!
	counterId: BigInt!
	sender: Bytes!
	amount: BigInt!
	receiver: Bytes!
	blockNumber: BigInt!
	blockTimestamp: BigInt!
	transactionHash: Bytes!
	transactionIndex: BigInt!
	logIndex: BigInt!
	blockHash: Bytes!
}

type Initialized @entity {
	id: ID!
	counterId: BigInt!
	version: BigInt!
	blockNumber: BigInt!
	blockTimestamp: BigInt!
	transactionHash: Bytes!
	transactionIndex: BigInt!
	logIndex: BigInt!
	blockHash: Bytes!
}

type Paused @entity {
	id: ID!
	counterId: BigInt!
	account: Bytes!
	blockNumber: BigInt!
	blockTimestamp: BigInt!
	transactionHash: Bytes!
	transactionIndex: BigInt!
	logIndex: BigInt!
	blockHash: Bytes!
}

type RescueToken @entity {
	id: ID!
	counterId: BigInt!
	token: Bytes!
	amount: BigInt!
	receiver: Bytes!
	blockNumber: BigInt!
	blockTimestamp: BigInt!
	transactionHash: Bytes!
	transactionIndex: BigInt!
	logIndex: BigInt!
	blockHash: Bytes!
}

type RewardClaimed @entity {
	id: ID!
	counterId: BigInt!
	user: Bytes!
	rewardsToken: Bytes!
	reward: BigInt!
	blockNumber: BigInt!
	blockTimestamp: BigInt!
	transactionHash: Bytes!
	transactionIndex: BigInt!
	logIndex: BigInt!
	blockHash: Bytes!
}

type RewardNotified @entity {
	id: ID!
	counterId: BigInt!
	rewardsTokens: [Bytes!]
	rewards: [BigInt!]
	newRates: [BigInt!]
	blockNumber: BigInt!
	blockTimestamp: BigInt!
	transactionHash: Bytes!
	transactionIndex: BigInt!
	logIndex: BigInt!
	blockHash: Bytes!
}

type RoleAdminChanged @entity {
	id: ID!
	counterId: BigInt!
	role: Bytes!
	previousAdminRole: Bytes!
	newAdminRole: Bytes!
	blockNumber: BigInt!
	blockTimestamp: BigInt!
	transactionHash: Bytes!
	transactionIndex: BigInt!
	logIndex: BigInt!
	blockHash: Bytes!
}

type RoleGranted @entity {
	id: ID!
	counterId: BigInt!
	role: Bytes!
	account: Bytes!
	sender: Bytes!
	blockNumber: BigInt!
	blockTimestamp: BigInt!
	transactionHash: Bytes!
	transactionIndex: BigInt!
	logIndex: BigInt!
	blockHash: Bytes!
}

type RoleRevoked @entity {
	id: ID!
	counterId: BigInt!
	role: Bytes!
	account: Bytes!
	sender: Bytes!
	blockNumber: BigInt!
	blockTimestamp: BigInt!
	transactionHash: Bytes!
	transactionIndex: BigInt!
	logIndex: BigInt!
	blockHash: Bytes!
}

type Unpaused @entity {
	id: ID!
	counterId: BigInt!
	account: Bytes!
	blockNumber: BigInt!
	blockTimestamp: BigInt!
	transactionHash: Bytes!
	transactionIndex: BigInt!
	logIndex: BigInt!
	blockHash: Bytes!
}

type UpdateWhitelist @entity {
	id: ID!
	counterId: BigInt!
	token: Bytes!
	whitelist: Boolean!
	blockNumber: BigInt!
	blockTimestamp: BigInt!
	transactionHash: Bytes!
	transactionIndex: BigInt!
	logIndex: BigInt!
	blockHash: Bytes!
}

type Withdraw @entity {
	id: ID!
	counterId: BigInt!
	sender: Bytes!
	amount: BigInt!
	to: Bytes!
	blockNumber: BigInt!
	blockTimestamp: BigInt!
	transactionHash: Bytes!
	transactionIndex: BigInt!
	logIndex: BigInt!
	blockHash: Bytes!
}
