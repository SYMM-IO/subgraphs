type GlobalCounter @entity(immutable: false) {
    id: String!
    counter: BigInt!
}

type DebugEntity @entity(immutable: true) {
	id: String!
	timestamp: BigInt
	trigger: BigInt
	type: String
	message: String
}

type Deposit @entity(immutable: true) {
	id: ID!
	counterId: BigInt!
	sender: Bytes!
	amount: BigInt!
	receiver: Bytes!
	blockNumber: BigInt!
	blockTimestamp: BigInt!
	transactionHash: Bytes!
	transactionIndex: BigInt!
	logIndex: BigInt!
	blockHash: Bytes!
}

type StakingInitialized @entity(immutable: true) {
	id: ID!
	counterId: BigInt!
	version: BigInt!
	blockNumber: BigInt!
	blockTimestamp: BigInt!
	transactionHash: Bytes!
	transactionIndex: BigInt!
	logIndex: BigInt!
	blockHash: Bytes!
}

type StakingPaused @entity(immutable: true) {
	id: ID!
	counterId: BigInt!
	account: Bytes!
	blockNumber: BigInt!
	blockTimestamp: BigInt!
	transactionHash: Bytes!
	transactionIndex: BigInt!
	logIndex: BigInt!
	blockHash: Bytes!
}

type RescueToken @entity(immutable: true) {
	id: ID!
	counterId: BigInt!
	token: Bytes!
	amount: BigInt!
	receiver: Bytes!
	blockNumber: BigInt!
	blockTimestamp: BigInt!
	transactionHash: Bytes!
	transactionIndex: BigInt!
	logIndex: BigInt!
	blockHash: Bytes!
}

type RewardClaimed @entity(immutable: true) {
	id: ID!
	counterId: BigInt!
	user: Bytes!
	rewardsToken: Bytes!
	reward: BigInt!
	blockNumber: BigInt!
	blockTimestamp: BigInt!
	transactionHash: Bytes!
	transactionIndex: BigInt!
	logIndex: BigInt!
	blockHash: Bytes!
}

type RewardNotified @entity(immutable: true) {
	id: ID!
	counterId: BigInt!
	rewardsTokens: [Bytes!]
	rewards: [BigInt!]
	newRates: [BigInt!]
	blockNumber: BigInt!
	blockTimestamp: BigInt!
	transactionHash: Bytes!
	transactionIndex: BigInt!
	logIndex: BigInt!
	blockHash: Bytes!
}

type StakingRoleAdminChanged @entity(immutable: true) {
	id: ID!
	counterId: BigInt!
	role: Bytes!
	previousAdminRole: Bytes!
	newAdminRole: Bytes!
	blockNumber: BigInt!
	blockTimestamp: BigInt!
	transactionHash: Bytes!
	transactionIndex: BigInt!
	logIndex: BigInt!
	blockHash: Bytes!
}

type StakingRoleGranted @entity(immutable: true) {
	id: ID!
	counterId: BigInt!
	role: Bytes!
	account: Bytes!
	sender: Bytes!
	blockNumber: BigInt!
	blockTimestamp: BigInt!
	transactionHash: Bytes!
	transactionIndex: BigInt!
	logIndex: BigInt!
	blockHash: Bytes!
}

type StakingRoleRevoked @entity(immutable: true) {
	id: ID!
	counterId: BigInt!
	role: Bytes!
	account: Bytes!
	sender: Bytes!
	blockNumber: BigInt!
	blockTimestamp: BigInt!
	transactionHash: Bytes!
	transactionIndex: BigInt!
	logIndex: BigInt!
	blockHash: Bytes!
}

type StakingUnpaused @entity(immutable: true) {
	id: ID!
	counterId: BigInt!
	account: Bytes!
	blockNumber: BigInt!
	blockTimestamp: BigInt!
	transactionHash: Bytes!
	transactionIndex: BigInt!
	logIndex: BigInt!
	blockHash: Bytes!
}

type UpdateWhitelist @entity(immutable: true) {
	id: ID!
	counterId: BigInt!
	token: Bytes!
	whitelist: Boolean!
	blockNumber: BigInt!
	blockTimestamp: BigInt!
	transactionHash: Bytes!
	transactionIndex: BigInt!
	logIndex: BigInt!
	blockHash: Bytes!
}

type Withdraw @entity(immutable: true) {
	id: ID!
	counterId: BigInt!
	sender: Bytes!
	amount: BigInt!
	to: Bytes!
	blockNumber: BigInt!
	blockTimestamp: BigInt!
	transactionHash: Bytes!
	transactionIndex: BigInt!
	logIndex: BigInt!
	blockHash: Bytes!
}

type Transfer @entity(immutable: true) {
	id: ID!
	counterId: BigInt!
	from: Bytes!
	to: Bytes!
	value: BigInt!
	blockNumber: BigInt!
	blockTimestamp: BigInt!
	transactionHash: Bytes!
	transactionIndex: BigInt!
	logIndex: BigInt!
	blockHash: Bytes!
}

type Approval @entity(immutable: true) {
	id: ID!
	counterId: BigInt!
	owner: Bytes!
	spender: Bytes!
	value: BigInt!
	blockNumber: BigInt!
	blockTimestamp: BigInt!
	transactionHash: Bytes!
	transactionIndex: BigInt!
	logIndex: BigInt!
	blockHash: Bytes!
}

type VestingInitialized @entity(immutable: true) {
	id: ID!
	counterId: BigInt!
	version: BigInt!
	blockNumber: BigInt!
	blockTimestamp: BigInt!
	transactionHash: Bytes!
	transactionIndex: BigInt!
	logIndex: BigInt!
	blockHash: Bytes!
}

type VestingPaused @entity(immutable: true) {
	id: ID!
	counterId: BigInt!
	account: Bytes!
	blockNumber: BigInt!
	blockTimestamp: BigInt!
	transactionHash: Bytes!
	transactionIndex: BigInt!
	logIndex: BigInt!
	blockHash: Bytes!
}

type VestingRoleAdminChanged @entity(immutable: true) {
	id: ID!
	counterId: BigInt!
	role: Bytes!
	previousAdminRole: Bytes!
	newAdminRole: Bytes!
	blockNumber: BigInt!
	blockTimestamp: BigInt!
	transactionHash: Bytes!
	transactionIndex: BigInt!
	logIndex: BigInt!
	blockHash: Bytes!
}

type VestingRoleGranted @entity(immutable: true) {
	id: ID!
	counterId: BigInt!
	role: Bytes!
	account: Bytes!
	sender: Bytes!
	blockNumber: BigInt!
	blockTimestamp: BigInt!
	transactionHash: Bytes!
	transactionIndex: BigInt!
	logIndex: BigInt!
	blockHash: Bytes!
}

type VestingRoleRevoked @entity(immutable: true) {
	id: ID!
	counterId: BigInt!
	role: Bytes!
	account: Bytes!
	sender: Bytes!
	blockNumber: BigInt!
	blockTimestamp: BigInt!
	transactionHash: Bytes!
	transactionIndex: BigInt!
	logIndex: BigInt!
	blockHash: Bytes!
}

type VestingUnpaused @entity(immutable: true) {
	id: ID!
	counterId: BigInt!
	account: Bytes!
	blockNumber: BigInt!
	blockTimestamp: BigInt!
	transactionHash: Bytes!
	transactionIndex: BigInt!
	logIndex: BigInt!
	blockHash: Bytes!
}

type LiquidityAdded @entity(immutable: true) {
	id: ID!
	counterId: BigInt!
	user: Bytes!
	symmAmount: BigInt!
	usdcAmount: BigInt!
	lpAmount: BigInt!
	blockNumber: BigInt!
	blockTimestamp: BigInt!
	transactionHash: Bytes!
	transactionIndex: BigInt!
	logIndex: BigInt!
	blockHash: Bytes!
}

type LockedTokenClaimed @entity(immutable: true) {
	id: ID!
	counterId: BigInt!
	token: Bytes!
	user: Bytes!
	amount: BigInt!
	penalty: BigInt!
	blockNumber: BigInt!
	blockTimestamp: BigInt!
	transactionHash: Bytes!
	transactionIndex: BigInt!
	logIndex: BigInt!
	blockHash: Bytes!
}

type UnlockedTokenClaimed @entity(immutable: true) {
	id: ID!
	counterId: BigInt!
	token: Bytes!
	user: Bytes!
	amount: BigInt!
	blockNumber: BigInt!
	blockTimestamp: BigInt!
	transactionHash: Bytes!
	transactionIndex: BigInt!
	logIndex: BigInt!
	blockHash: Bytes!
}

type VestingPlanReset @entity(immutable: true) {
	id: ID!
	counterId: BigInt!
	token: Bytes!
	user: Bytes!
	newAmount: BigInt!
	blockNumber: BigInt!
	blockTimestamp: BigInt!
	transactionHash: Bytes!
	transactionIndex: BigInt!
	logIndex: BigInt!
	blockHash: Bytes!
}

type VestingPlanSetup @entity(immutable: true) {
	id: ID!
	counterId: BigInt!
	token: Bytes!
	user: Bytes!
	amount: BigInt!
	startTime: BigInt!
	endTime: BigInt!
	blockNumber: BigInt!
	blockTimestamp: BigInt!
	transactionHash: Bytes!
	transactionIndex: BigInt!
	logIndex: BigInt!
	blockHash: Bytes!
}
