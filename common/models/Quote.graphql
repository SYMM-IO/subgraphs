type Quote @entity {
	id: String!
	globalCounter: BigInt!
	quoteId: BigInt!
	quoteStatus: Int
	partyA: Bytes!
	partyB: Bytes
	action: String!
	blockNumber: BigInt!

	# open request
	requestedOpenPrice: BigInt
	marketPrice: BigInt
	orderTypeOpen: Int
	quantity: BigInt
	cva: BigInt
	lf: BigInt
	partyBmm: BigInt
	partyAmm: BigInt
	symbolId: BigInt
	symbol: String
	positionType: Int
	openDeadline: BigInt
	partyBsWhiteList: [Bytes!]
	maxFundingRate: BigInt

	# open
	fillAmount: BigInt
	openedPrice: BigInt
	tradingFee: BigInt!

	# initial
	initialOpenedPrice: BigInt
	initialData: InitialQuote

	# close request
	closePrice: BigInt # request
	orderTypeClose: Int
	closedPrice: BigInt # done
	closeDeadline: BigInt
	quantityToClose: BigInt
	closeId: BigInt

	# closed
	closedAmount: BigInt
	leverage: BigInt
	averageClosedPrice: BigInt

	# liquidation
	liquidatePrice: BigInt
	liquidateAmount: BigInt
	liquidatedSide: Int

	# funding rate
	fundingRateFee: BigInt
	fundingRateOpenedPrice: BigInt

	# timestamps
	timeStamp: BigInt!
	eventsTimestamp: EventsTimestamp!

	# transaction hashes
	transactionsHash: TransactionsHash
}

type InitialQuote @entity {
	id: ID!
	quoteId: BigInt!
	orderTypeOpen: Int!
	partyA: Bytes!
	symbolId: BigInt!
	positionType: Int!
	requestedOpenPrice: BigInt!
	quantity: BigInt!
	cva: BigInt!
	partyAmm: BigInt
	partyBmm: BigInt!
	lf: BigInt!
	tradingFee: BigInt
	deadline: BigInt!
	quoteStatus: Int!
	marketPrice: BigInt!
	symbol: String!
	partyBsWhiteList: [Bytes!]
	timeStamp: BigInt!
}

type EventsTimestamp @entity {
	id: ID!
	lastFundingPayment: BigInt
	ExpireQuote: BigInt
	AcceptCancelCloseRequest: BigInt
	AcceptCancelRequest: BigInt
	ChargeFundingRate: BigInt
	EmergencyClosePosition: BigInt
	ForceCancelCloseRequest: BigInt
	FillCloseRequest: BigInt
	ForceCancelQuote: BigInt
	ForceClosePosition: BigInt
	LockQuote: BigInt
	RequestToCancelCloseRequest: BigInt
	OpenPosition: BigInt
	RequestToCancelQuote: BigInt
	SendQuote: BigInt
	RequestToLimitClosePosition: BigInt
	UnlockQuote: BigInt
	RequestToClosePosition: BigInt
	LiquidatePositionsPartyA: BigInt
	LiquidatePositionsPartyB: BigInt
}

type TransactionsHash @entity {
	id: ID!
	ExpireQuote: Bytes
	AcceptCancelCloseRequest: Bytes
	AcceptCancelRequest: Bytes
	ChargeFundingRate: Bytes
	EmergencyClosePosition: Bytes
	ForceCancelCloseRequest: Bytes
	FillCloseRequest: Bytes
	ForceCancelQuote: Bytes
	ForceClosePosition: Bytes
	LockQuote: Bytes
	RequestToCancelCloseRequest: Bytes
	OpenPosition: Bytes
	RequestToCancelQuote: Bytes
	SendQuote: Bytes
	RequestToLimitClosePosition: Bytes
	UnlockQuote: Bytes
	RequestToClosePosition: Bytes
	LiquidatePositionsPartyA: Bytes
	LiquidatePositionsPartyB: Bytes
}
type PartyA @entity {
	id: String!
	partyB: Bytes
	quoteUntilLiquid: [BigInt!]
	globalCounter: BigInt!
}

type PartyBPartyA @entity {
	id: String!
	partyB: Bytes
	quoteUntilLiquid: [BigInt!]
	globalCounter: BigInt!
}

type PartyASymbolPrice @entity {
	id: String!
	partyA: Bytes!
	symbolId: BigInt!
	requestedOpenPrice: BigInt!
	timeStamp: BigInt!
	trHash: Bytes!
	GlobalCounter: BigInt!
}

type GlobalFee @entity {
	id: ID!
	globalFee: BigInt!
	latestTimestamp: BigInt!
}
