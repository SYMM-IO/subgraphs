type UserActivity @entity(immutable: false) {
	id: ID!
	user: Bytes!
	accountSource: Bytes
	timestamp: BigInt!
	updateTimestamp: BigInt
}

type BalanceChange @entity(immutable: false) {
	id: ID!
	type: String!
	account: Bytes!
	sideAccount: Bytes
	amount: BigInt!
	collateral: Bytes!
	timestamp: BigInt!
	blockNumber: BigInt!
	transaction: Bytes!
}

type TradeHistory @entity(immutable: false) {
	id: ID!
	account: Bytes!
	volume: BigInt!
	timestamp: BigInt!
	updateTimestamp: BigInt!
	blockNumber: BigInt!
	transaction: Bytes!
	quoteStatus: Int!
	quote: BigInt!
}

type DailyHistory @entity(immutable: false) {
	id: ID!
	day: BigInt!
	quotesCount: BigInt!
	tradeVolume: BigInt!
	openTradeVolume: BigInt!
	closeTradeVolume: BigInt!
	liquidateTradeVolume: BigInt!
	deposit: BigInt!
	withdraw: BigInt!
	allocate: BigInt!
	deallocate: BigInt!
	activeUsers: BigInt!
	newUsers: BigInt!
	newAccounts: BigInt!
	platformFee: BigInt!
	openInterest: BigInt!
	fundingPaid: BigInt!
	fundingReceived: BigInt!
	averagePositionSize: BigInt!
	positionsCount: BigInt!
	accountSource: Bytes
	updateTimestamp: BigInt!
	timestamp: BigInt!
}

type SolverDailyHistory @entity(immutable: false) {
	id: ID!
	day: BigInt!
	tradeVolume: BigInt!
	openTradeVolume: BigInt!
	closeTradeVolume: BigInt!
	liquidateTradeVolume: BigInt!
	openInterest: BigInt!
	averagePositionSize: BigInt!
	positionsCount: BigInt!
	fundingPaid: BigInt!
	fundingReceived: BigInt!
	solver: Bytes!
	accountSource: Bytes
	updateTimestamp: BigInt!
	timestamp: BigInt!
}

type WeeklyHistory @entity(immutable: false) {
	id: ID!
	tradeVolume: BigInt!
	activeUsers: BigInt!
	accountSource: Bytes
	timestamp: BigInt!
}

type MonthlyHistory @entity(immutable: false) {
	id: ID!
	tradeVolume: BigInt!
	activeUsers: BigInt!
	accountSource: Bytes
	timestamp: BigInt!
}

type TotalHistory @entity(immutable: false) {
	id: ID!
	quotesCount: BigInt!
	tradeVolume: BigInt!
	openTradeVolume: BigInt!
	closeTradeVolume: BigInt!
	liquidateTradeVolume: BigInt!
	deposit: BigInt!
	withdraw: BigInt!
	allocate: BigInt!
	deallocate: BigInt!
	users: BigInt!
	accounts: BigInt!
	platformFee: BigInt!
	fundingPaid: BigInt!
	fundingReceived: BigInt!
	accountSource: Bytes
	collateral: Bytes!
	updateTimestamp: BigInt!
	timestamp: BigInt!
}

type TotalSolverHistory @entity(immutable: false) {
	id: ID!
	tradeVolume: BigInt!
	openTradeVolume: BigInt!
	closeTradeVolume: BigInt!
	liquidateTradeVolume: BigInt!
	openInterest: BigInt!
	averagePositionSize: BigInt!
	positionsCount: BigInt!
	fundingPaid: BigInt!
	fundingReceived: BigInt!
	solver: Bytes!
	accountSource: Bytes
	updateTimestamp: BigInt!
	timestamp: BigInt!
}

type DailyUserHistory @entity(immutable: false) {
	id: ID!
	day: BigInt!
	account: Bytes!
	quotesCount: BigInt!
	openTradeVolume: BigInt!
	closeTradeVolume: BigInt!
	liquidateTradeVolume: BigInt!
	deposit: BigInt!
	withdraw: BigInt!
	allocate: BigInt!
	deallocate: BigInt!
	accAllocate: BigInt!
	accDeallocate: BigInt!
	platformFeePaid: BigInt!
	fundingPaid: BigInt!
	fundingReceived: BigInt!
	loss: BigInt!
	profit: BigInt!
	accountSource: Bytes
	updateTimestamp: BigInt!
	timestamp: BigInt!
}

type TotalUserHistory @entity(immutable: false) {
	id: ID!
	account: Bytes!
	quotesCount: BigInt!
	openTradeVolume: BigInt!
	closeTradeVolume: BigInt!
	liquidateTradeVolume: BigInt!
	deposit: BigInt!
	withdraw: BigInt!
	allocate: BigInt!
	deallocate: BigInt!
	platformFeePaid: BigInt!
	fundingPaid: BigInt!
	fundingReceived: BigInt!
	loss: BigInt!
	profit: BigInt!
	accountSource: Bytes
	updateTimestamp: BigInt!
	timestamp: BigInt!
}

type SymbolTradeHistory @entity(immutable: false) {
	id: ID!
	symbolId: BigInt!
	timestamp: BigInt!
	updateTimestamp: BigInt!
	volume: BigInt!
	accountSource: Bytes
}

type DailySymbolTradesHistory @entity(immutable: false) {
	id: ID! # account_source + account + symbolId
	day: BigInt!
	updateTimestamp: BigInt!
	account: Bytes!
	accountSource: Bytes
	symbolId: BigInt!
	totalTrades: BigInt!
	fundingReceived: BigInt!
	fundingPaid: BigInt!
	platformFeePaid: BigInt!
}

type TotalSymbolTradesHistory @entity(immutable: false) {
	id: ID! # account_source + account + symbolId
	updateTimestamp: BigInt!
	account: Bytes!
	accountSource: Bytes
	symbolId: BigInt!
	totalTrades: BigInt!
	fundingReceived: BigInt!
	fundingPaid: BigInt!
	platformFeePaid: BigInt!
}

type OpenInterest @entity(immutable: false) {
	id: ID!
	amount: BigInt!
	weightedAmount: BigInt!
	timestamp: BigInt!
}

type Configuration @entity(immutable: false) {
	id: ID!
	collateral: Bytes!
	updateTimestamp: BigInt!
	updateTransaction: Bytes!
}

type GrantedRole @entity(immutable: false) {
	id: ID!
	role: String!
	user: Bytes!
	contract: Bytes
	grantTransaction: Bytes
	revokeTransaction: Bytes
	updateTimestamp: BigInt!
}

type OpenInterestSettleDay @entity(immutable: false) {
	id: ID!
	dayNumber: BigInt!
	timestamp: BigInt!
}
